#!/usr/bin/env python3

def test_imports():
    """Test if all required packages can be imported"""
    try:
        import fastapi
        print("‚úì FastAPI imported successfully")

        import PyPDF2
        print("‚úì PyPDF2 imported successfully")

        import pdfplumber
        print("‚úì pdfplumber imported successfully")

        import pandas
        print("‚úì Pandas imported successfully")

        import sklearn
        print("‚úì scikit-learn imported successfully")

        import nltk
        print("‚úì NLTK imported successfully")

        print("\nüéâ All core packages imported successfully!")
        return True

    except ImportError as e:
        print(f"‚ùå Import error: {e}")
        return False


def test_nlp_models():
    """Test if NLP models are working"""
    try:
        import nltk
        print("‚úì NLTK imported successfully")

        from sklearn.feature_extraction.text import TfidfVectorizer
        print("‚úì scikit-learn TF-IDF available")

        # Test our simple NLP processor (PyCharm handles imports better)
        from app.services.nlp_processor import NLPProcessor
        nlp = NLPProcessor()

        test_text = "I have 5 years of experience in Python, JavaScript, and React development."
        skills = nlp.extract_skills(test_text)
        print(f"‚úì Skill extraction working: {skills[:3]}...")  # Show first 3 skills

        similarity = nlp.calculate_similarity("Python developer", "JavaScript engineer")
        print(f"‚úì Text similarity working: {similarity:.2f}")

        return True

    except Exception as e:
        print(f"‚ùå NLP setup error: {e}")
        return False


if __name__ == "__main__":
    print("Testing project setup...\n")

    imports_ok = test_imports()
    spacy_ok = test_nlp_models()

    if imports_ok and spacy_ok:
        print("\nüöÄ Setup is complete! Ready to proceed.")
    else:
        print("\n‚ö†Ô∏è Some issues found. Please fix them before proceeding.")